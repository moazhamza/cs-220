
a.out:     file format elf32-i386


Disassembly of section .init:

080482bc <_init>:
 80482bc:	55                   	push   ebp
 80482bd:	89 e5                	mov    ebp,esp
 80482bf:	53                   	push   ebx
 80482c0:	83 ec 04             	sub    esp,0x4
 80482c3:	e8 00 00 00 00       	call   80482c8 <_init+0xc>
 80482c8:	5b                   	pop    ebx
 80482c9:	81 c3 cc 13 00 00    	add    ebx,0x13cc
 80482cf:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 80482d5:	85 d2                	test   edx,edx
 80482d7:	74 05                	je     80482de <_init+0x22>
 80482d9:	e8 32 00 00 00       	call   8048310 <__gmon_start__@plt>
 80482de:	58                   	pop    eax
 80482df:	5b                   	pop    ebx
 80482e0:	c9                   	leave  
 80482e1:	c3                   	ret    

Disassembly of section .plt:

080482f0 <printf@plt-0x10>:
 80482f0:	ff 35 98 96 04 08    	push   DWORD PTR ds:0x8049698
 80482f6:	ff 25 9c 96 04 08    	jmp    DWORD PTR ds:0x804969c
 80482fc:	00 00                	add    BYTE PTR [eax],al
	...

08048300 <printf@plt>:
 8048300:	ff 25 a0 96 04 08    	jmp    DWORD PTR ds:0x80496a0
 8048306:	68 00 00 00 00       	push   0x0
 804830b:	e9 e0 ff ff ff       	jmp    80482f0 <_init+0x34>

08048310 <__gmon_start__@plt>:
 8048310:	ff 25 a4 96 04 08    	jmp    DWORD PTR ds:0x80496a4
 8048316:	68 08 00 00 00       	push   0x8
 804831b:	e9 d0 ff ff ff       	jmp    80482f0 <_init+0x34>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 a8 96 04 08    	jmp    DWORD PTR ds:0x80496a8
 8048326:	68 10 00 00 00       	push   0x10
 804832b:	e9 c0 ff ff ff       	jmp    80482f0 <_init+0x34>

Disassembly of section .text:

08048330 <main>:
 8048330:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8048334:	83 e4 f0             	and    esp,0xfffffff0
 8048337:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 804833a:	55                   	push   ebp
 804833b:	89 e5                	mov    ebp,esp
 804833d:	51                   	push   ecx
 804833e:	83 ec 0c             	sub    esp,0xc
 8048341:	68 cf 00 00 00       	push   0xcf
 8048346:	68 e0 84 04 08       	push   0x80484e0
 804834b:	e8 b0 ff ff ff       	call   8048300 <printf@plt>
 8048350:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 8048353:	31 c0                	xor    eax,eax
 8048355:	c9                   	leave  
 8048356:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048359:	c3                   	ret    
 804835a:	90                   	nop
 804835b:	90                   	nop

0804835c <_start>:
 804835c:	31 ed                	xor    ebp,ebp
 804835e:	5e                   	pop    esi
 804835f:	89 e1                	mov    ecx,esp
 8048361:	83 e4 f0             	and    esp,0xfffffff0
 8048364:	50                   	push   eax
 8048365:	54                   	push   esp
 8048366:	52                   	push   edx
 8048367:	68 50 84 04 08       	push   0x8048450
 804836c:	68 60 84 04 08       	push   0x8048460
 8048371:	51                   	push   ecx
 8048372:	56                   	push   esi
 8048373:	68 30 83 04 08       	push   0x8048330
 8048378:	e8 a3 ff ff ff       	call   8048320 <__libc_start_main@plt>
 804837d:	f4                   	hlt    
 804837e:	90                   	nop
 804837f:	90                   	nop

08048380 <deregister_tm_clones>:
 8048380:	b8 b7 96 04 08       	mov    eax,0x80496b7
 8048385:	2d b4 96 04 08       	sub    eax,0x80496b4
 804838a:	83 f8 06             	cmp    eax,0x6
 804838d:	77 02                	ja     8048391 <deregister_tm_clones+0x11>
 804838f:	f3 c3                	repz ret 
 8048391:	b8 00 00 00 00       	mov    eax,0x0
 8048396:	85 c0                	test   eax,eax
 8048398:	74 f5                	je     804838f <deregister_tm_clones+0xf>
 804839a:	55                   	push   ebp
 804839b:	89 e5                	mov    ebp,esp
 804839d:	83 ec 18             	sub    esp,0x18
 80483a0:	c7 04 24 b4 96 04 08 	mov    DWORD PTR [esp],0x80496b4
 80483a7:	ff d0                	call   eax
 80483a9:	c9                   	leave  
 80483aa:	c3                   	ret    
 80483ab:	90                   	nop
 80483ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080483b0 <register_tm_clones>:
 80483b0:	b8 b4 96 04 08       	mov    eax,0x80496b4
 80483b5:	2d b4 96 04 08       	sub    eax,0x80496b4
 80483ba:	c1 f8 02             	sar    eax,0x2
 80483bd:	89 c2                	mov    edx,eax
 80483bf:	c1 ea 1f             	shr    edx,0x1f
 80483c2:	01 d0                	add    eax,edx
 80483c4:	d1 f8                	sar    eax,1
 80483c6:	75 02                	jne    80483ca <register_tm_clones+0x1a>
 80483c8:	f3 c3                	repz ret 
 80483ca:	ba 00 00 00 00       	mov    edx,0x0
 80483cf:	85 d2                	test   edx,edx
 80483d1:	74 f5                	je     80483c8 <register_tm_clones+0x18>
 80483d3:	55                   	push   ebp
 80483d4:	89 e5                	mov    ebp,esp
 80483d6:	83 ec 18             	sub    esp,0x18
 80483d9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80483dd:	c7 04 24 b4 96 04 08 	mov    DWORD PTR [esp],0x80496b4
 80483e4:	ff d2                	call   edx
 80483e6:	c9                   	leave  
 80483e7:	c3                   	ret    
 80483e8:	90                   	nop
 80483e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

080483f0 <__do_global_dtors_aux>:
 80483f0:	80 3d b4 96 04 08 00 	cmp    BYTE PTR ds:0x80496b4,0x0
 80483f7:	75 13                	jne    804840c <__do_global_dtors_aux+0x1c>
 80483f9:	55                   	push   ebp
 80483fa:	89 e5                	mov    ebp,esp
 80483fc:	83 ec 08             	sub    esp,0x8
 80483ff:	e8 7c ff ff ff       	call   8048380 <deregister_tm_clones>
 8048404:	c6 05 b4 96 04 08 01 	mov    BYTE PTR ds:0x80496b4,0x1
 804840b:	c9                   	leave  
 804840c:	f3 c3                	repz ret 
 804840e:	66 90                	xchg   ax,ax

08048410 <frame_dummy>:
 8048410:	a1 9c 95 04 08       	mov    eax,ds:0x804959c
 8048415:	85 c0                	test   eax,eax
 8048417:	74 1e                	je     8048437 <frame_dummy+0x27>
 8048419:	b8 00 00 00 00       	mov    eax,0x0
 804841e:	85 c0                	test   eax,eax
 8048420:	74 15                	je     8048437 <frame_dummy+0x27>
 8048422:	55                   	push   ebp
 8048423:	89 e5                	mov    ebp,esp
 8048425:	83 ec 18             	sub    esp,0x18
 8048428:	c7 04 24 9c 95 04 08 	mov    DWORD PTR [esp],0x804959c
 804842f:	ff d0                	call   eax
 8048431:	c9                   	leave  
 8048432:	e9 79 ff ff ff       	jmp    80483b0 <register_tm_clones>
 8048437:	e9 74 ff ff ff       	jmp    80483b0 <register_tm_clones>

0804843c <func>:
 804843c:	55                   	push   ebp
 804843d:	89 e5                	mov    ebp,esp
 804843f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048442:	0b 45 08             	or     eax,DWORD PTR [ebp+0x8]
 8048445:	5d                   	pop    ebp
 8048446:	c3                   	ret    
 8048447:	90                   	nop
 8048448:	90                   	nop
 8048449:	90                   	nop
 804844a:	90                   	nop
 804844b:	90                   	nop
 804844c:	90                   	nop
 804844d:	90                   	nop
 804844e:	90                   	nop
 804844f:	90                   	nop

08048450 <__libc_csu_fini>:
 8048450:	55                   	push   ebp
 8048451:	89 e5                	mov    ebp,esp
 8048453:	5d                   	pop    ebp
 8048454:	c3                   	ret    
 8048455:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048459:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048460 <__libc_csu_init>:
 8048460:	55                   	push   ebp
 8048461:	89 e5                	mov    ebp,esp
 8048463:	57                   	push   edi
 8048464:	56                   	push   esi
 8048465:	53                   	push   ebx
 8048466:	e8 4f 00 00 00       	call   80484ba <__i686.get_pc_thunk.bx>
 804846b:	81 c3 29 12 00 00    	add    ebx,0x1229
 8048471:	83 ec 1c             	sub    esp,0x1c
 8048474:	e8 43 fe ff ff       	call   80482bc <_init>
 8048479:	8d bb 04 ff ff ff    	lea    edi,[ebx-0xfc]
 804847f:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 8048485:	29 c7                	sub    edi,eax
 8048487:	c1 ff 02             	sar    edi,0x2
 804848a:	85 ff                	test   edi,edi
 804848c:	74 24                	je     80484b2 <__libc_csu_init+0x52>
 804848e:	31 f6                	xor    esi,esi
 8048490:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048493:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048497:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804849a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804849e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80484a1:	89 04 24             	mov    DWORD PTR [esp],eax
 80484a4:	ff 94 b3 00 ff ff ff 	call   DWORD PTR [ebx+esi*4-0x100]
 80484ab:	83 c6 01             	add    esi,0x1
 80484ae:	39 fe                	cmp    esi,edi
 80484b0:	72 de                	jb     8048490 <__libc_csu_init+0x30>
 80484b2:	83 c4 1c             	add    esp,0x1c
 80484b5:	5b                   	pop    ebx
 80484b6:	5e                   	pop    esi
 80484b7:	5f                   	pop    edi
 80484b8:	5d                   	pop    ebp
 80484b9:	c3                   	ret    

080484ba <__i686.get_pc_thunk.bx>:
 80484ba:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80484bd:	c3                   	ret    
 80484be:	90                   	nop
 80484bf:	90                   	nop

Disassembly of section .fini:

080484c0 <_fini>:
 80484c0:	55                   	push   ebp
 80484c1:	89 e5                	mov    ebp,esp
 80484c3:	53                   	push   ebx
 80484c4:	83 ec 04             	sub    esp,0x4
 80484c7:	e8 00 00 00 00       	call   80484cc <_fini+0xc>
 80484cc:	5b                   	pop    ebx
 80484cd:	81 c3 c8 11 00 00    	add    ebx,0x11c8
 80484d3:	59                   	pop    ecx
 80484d4:	5b                   	pop    ebx
 80484d5:	c9                   	leave  
 80484d6:	c3                   	ret    
